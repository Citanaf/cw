//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WTG.XNDT.SampleClient.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceAction", Namespace="http://schemas.datacontract.org/2004/07/Enterprise.DataTransfer.Native.Service")]
    public enum ServiceAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Retrieve = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.cargowise.com/NativeDataService", ConfigurationName="ServiceReference.EnterpriseNativeDataService")]
    public interface EnterpriseNativeDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/RetrieveDa" +
            "ta", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/RetrieveDa" +
            "taResponse")]
        string RetrieveData(string retrieveDataRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/RetrieveDa" +
            "ta", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/RetrieveDa" +
            "taResponse")]
        System.Threading.Tasks.Task<string> RetrieveDataAsync(string retrieveDataRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/Retrieve", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/RetrieveRe" +
            "sponse")]
        System.Xml.Linq.XElement Retrieve(System.Xml.Linq.XElement retrieveDataRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/Retrieve", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/RetrieveRe" +
            "sponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> RetrieveAsync(System.Xml.Linq.XElement retrieveDataRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/UpdateData" +
            "", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/UpdateData" +
            "Response")]
        string UpdateData(string updateDataRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/UpdateData" +
            "", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/UpdateData" +
            "Response")]
        System.Threading.Tasks.Task<string> UpdateDataAsync(string updateDataRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/Update", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/UpdateResp" +
            "onse")]
        System.Xml.Linq.XElement Update(System.Xml.Linq.XElement updateDataRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/Update", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/UpdateResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> UpdateAsync(System.Xml.Linq.XElement updateDataRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/Service", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/ServiceRes" +
            "ponse")]
        System.Xml.Linq.XElement Service(System.Xml.Linq.XElement request, WTG.XNDT.SampleClient.ServiceReference.ServiceAction action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/Service", ReplyAction="http://www.cargowise.com/NativeDataService/EnterpriseNativeDataService/ServiceRes" +
            "ponse")]
        System.Threading.Tasks.Task<System.Xml.Linq.XElement> ServiceAsync(System.Xml.Linq.XElement request, WTG.XNDT.SampleClient.ServiceReference.ServiceAction action);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EnterpriseNativeDataServiceChannel : WTG.XNDT.SampleClient.ServiceReference.EnterpriseNativeDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnterpriseNativeDataServiceClient : System.ServiceModel.ClientBase<WTG.XNDT.SampleClient.ServiceReference.EnterpriseNativeDataService>, WTG.XNDT.SampleClient.ServiceReference.EnterpriseNativeDataService {
        
        public EnterpriseNativeDataServiceClient() {
        }
        
        public EnterpriseNativeDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnterpriseNativeDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnterpriseNativeDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnterpriseNativeDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string RetrieveData(string retrieveDataRequest) {
            return base.Channel.RetrieveData(retrieveDataRequest);
        }
        
        public System.Threading.Tasks.Task<string> RetrieveDataAsync(string retrieveDataRequest) {
            return base.Channel.RetrieveDataAsync(retrieveDataRequest);
        }
        
        public System.Xml.Linq.XElement Retrieve(System.Xml.Linq.XElement retrieveDataRequest) {
            return base.Channel.Retrieve(retrieveDataRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> RetrieveAsync(System.Xml.Linq.XElement retrieveDataRequest) {
            return base.Channel.RetrieveAsync(retrieveDataRequest);
        }
        
        public string UpdateData(string updateDataRequest) {
            return base.Channel.UpdateData(updateDataRequest);
        }
        
        public System.Threading.Tasks.Task<string> UpdateDataAsync(string updateDataRequest) {
            return base.Channel.UpdateDataAsync(updateDataRequest);
        }
        
        public System.Xml.Linq.XElement Update(System.Xml.Linq.XElement updateDataRequest) {
            return base.Channel.Update(updateDataRequest);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> UpdateAsync(System.Xml.Linq.XElement updateDataRequest) {
            return base.Channel.UpdateAsync(updateDataRequest);
        }
        
        public System.Xml.Linq.XElement Service(System.Xml.Linq.XElement request, WTG.XNDT.SampleClient.ServiceReference.ServiceAction action) {
            return base.Channel.Service(request, action);
        }
        
        public System.Threading.Tasks.Task<System.Xml.Linq.XElement> ServiceAsync(System.Xml.Linq.XElement request, WTG.XNDT.SampleClient.ServiceReference.ServiceAction action) {
            return base.Channel.ServiceAsync(request, action);
        }
    }
}
